<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Presentation</name>
    </assembly>
    <members>
        <member name="M:Presentation.Controllers.CompaniesController.GetCompaniesAsync">
            <summary>
            Gets the list of all companies
            </summary>
            <returns>The companies list</returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.GetCompanyAsync(System.Int32)">
            <summary>
            Get a company by its id
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.GetCompanyCollectionAsync(System.String)">
            <summary>
            Gets a collection of companies by their ids
            </summary>
            <remarks>Replace {companyIds} with a comma-delimited series of ints. 
            Swagger does not do this very well, so try testing in Postman.</remarks>
            <param name="companyIds"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.CreateCompanyAsync(Domain.DataTransferObjects.CompanyForCreationDto)">
            <summary>
            Creates a newly created company
            </summary>
            <param name="companyToCreate"></param>
            <returns>A newly created company</returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.CreateCompanyCollectionAsync(System.Collections.Generic.IEnumerable{Domain.DataTransferObjects.CompanyForCreationDto})">
            <summary>
            Creates new companies from a collection
            </summary>
            <param name="companyCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.UpdateCompanyAsync(System.Int32,Domain.DataTransferObjects.CompanyForUpdateDto)">
            <summary>
            Updates an existing company
            </summary>
            <param name="companyId"></param>
            <param name="companyForUpdateDto"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.DeleteCompanyAsync(System.Int32)">
            <summary>
            Deletes an existing company
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.PartiallyUpdateCompanyAsync(System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Domain.DataTransferObjects.CompanyForUpdateDto})">
            <summary>
            Partially updates an existing company
            </summary>
            <param name="id"></param>
            <param name="patchDoc"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.CompaniesController.GetCompaniesOptions">
            <summary>
            Get available HTTP Verbs
            </summary>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.GetEmployeesForCompanyAsync(System.Int32,Domain.RequestFeatures.EmployeeParameters)">
            <summary>
            Get all employees for a company
            </summary>
            <param name="companyId"></param>
            <param name="employeeParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.GetEmployeeForCompanyAsync(System.Int32,System.Int32)">
            <summary>
            Get an employee for a company
            </summary>
            <param name="companyId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.CreateEmployeeForCompany(System.Int32,Domain.DataTransferObjects.EmployeeForCreationDto)">
            <summary>
            Creates a newly created employee for a company
            </summary>
            <param name="companyId"></param>
            <param name="employeeToCreate"></param>
            <returns>A newly created company</returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.DeleteEmployeeForCompany(System.Int32,System.Int32)">
            <summary>
            Deletes an employee for a company
            </summary>
            <param name="companyId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.UpdateEmployeeForCompany(System.Int32,System.Int32,Domain.DataTransferObjects.EmployeeForUpdateDto)">
            <summary>
            Updates an employee for a company
            </summary>
            <param name="companyId"></param>
            <param name="id"></param>
            <param name="employeeToUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Presentation.Controllers.EmployeesController.PartiallyUpdateEmployeeForCompanyAsync(System.Int32,System.Int32,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Domain.DataTransferObjects.EmployeeForUpdateDto})">
            <summary>
            Partially updates an employee for a company 
            </summary>
            <param name="companyId"></param>
            <param name="id"></param>
            <param name="patchDoc"></param>
            <returns></returns>
        </member>
    </members>
</doc>
