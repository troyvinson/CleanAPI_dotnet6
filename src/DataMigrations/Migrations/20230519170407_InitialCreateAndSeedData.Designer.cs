// <auto-generated />
using System;
using Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataMigrations.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230519170407_InitialCreateAndSeedData")]
    partial class InitialCreateAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1510ed1d-317c-4e81-900b-869ff32795b3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 5, DateTimeKind.Utc).AddTicks(9988),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Manager",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("0b151f5a-8029-4bed-b0c3-ee389be7f820")
                        },
                        new
                        {
                            Id = new Guid("81a07a01-90d3-4100-b952-20ac0a6428a7"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 5, DateTimeKind.Utc).AddTicks(9995),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Assistant Manager",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("b2b0afa2-9253-44d6-b678-a2e554adb696")
                        },
                        new
                        {
                            Id = new Guid("7f96c51d-2a89-42bd-8c67-86399c12c672"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 5, DateTimeKind.Utc).AddTicks(9998),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Supervisor",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("e8c4badb-3d2a-44be-9479-254cc62660c9")
                        },
                        new
                        {
                            Id = new Guid("c2fba861-cf6a-49e0-b393-4eb01fa08fe7"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Associate",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("7de9ad64-486e-41c2-8fa2-eb3248ccf28f")
                        },
                        new
                        {
                            Id = new Guid("678f7712-4d04-4cc0-bbcc-8d67767b165e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(3),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Team Lead",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("ecdd09d1-298b-456f-badf-b4358af3a08e")
                        },
                        new
                        {
                            Id = new Guid("fc115211-a273-49a8-a955-bc9900d41acc"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(6),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Senior Associate",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("b5e64e97-7d3b-4338-add0-ead00e4959c2")
                        },
                        new
                        {
                            Id = new Guid("d88a4de2-fe96-4825-8da4-d9eebd9eceb3"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(8),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Trainer",
                            TenantId = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("27074358-129c-40aa-9f02-7e1646f1d9af")
                        },
                        new
                        {
                            Id = new Guid("54cb4c6a-017a-4fb5-9a16-6770bbdb6ce1"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(11),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Quality Assurance",
                            TenantId = new Guid("5217a17e-ffff-4fbc-aa1b-29175ab98f69"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("4d2fa6aa-4921-43bf-8578-a355b14bbd63")
                        },
                        new
                        {
                            Id = new Guid("53398a73-8b13-4ca6-803d-3c74b0dad959"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(14),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Consultant",
                            TenantId = new Guid("5217a17e-ffff-4fbc-aa1b-29175ab98f69"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("27074358-129c-40aa-9f02-7e1646f1d9af")
                        },
                        new
                        {
                            Id = new Guid("e8d32f9e-bb43-4551-9c11-e481b98eb00f"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            DateJoined = new DateTime(2023, 5, 19, 17, 4, 7, 6, DateTimeKind.Utc).AddTicks(16),
                            IsDeleted = false,
                            IsEnabled = true,
                            Position = "Project Manager",
                            TenantId = new Guid("5217a17e-ffff-4fbc-aa1b-29175ab98f69"),
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UserId = new Guid("4d2fa6aa-4921-43bf-8578-a355b14bbd63")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0aaa2440-01fe-451c-bcd9-ca6cbc876a3a"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            IsEnabled = true,
                            Name = "NovellaTech",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("5217a17e-ffff-4fbc-aa1b-29175ab98f69"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            IsDeleted = false,
                            IsEnabled = true,
                            Name = "VeloVentures",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b151f5a-8029-4bed-b0c3-ee389be7f820"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "johndoe@example.com",
                            GivenName = "John",
                            IsDeleted = false,
                            PhoneNumber = "555-111-1111",
                            Surname = "Doe",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "johndoe"
                        },
                        new
                        {
                            Id = new Guid("b2b0afa2-9253-44d6-b678-a2e554adb696"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "janesmith@example.com",
                            GivenName = "Jane",
                            IsDeleted = false,
                            PhoneNumber = "555-222-2222",
                            Surname = "Smith",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "janesmith"
                        },
                        new
                        {
                            Id = new Guid("e8c4badb-3d2a-44be-9479-254cc62660c9"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "michaelj@example.com",
                            GivenName = "Michael",
                            IsDeleted = false,
                            PhoneNumber = "555-333-3333",
                            Surname = "Johnson",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "michaelj"
                        },
                        new
                        {
                            Id = new Guid("7de9ad64-486e-41c2-8fa2-eb3248ccf28f"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "emilyw@example.com",
                            GivenName = "Emily",
                            IsDeleted = false,
                            PhoneNumber = "555-444-4444",
                            Surname = "Williams",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "emilyw"
                        },
                        new
                        {
                            Id = new Guid("ecdd09d1-298b-456f-badf-b4358af3a08e"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "danielb@example.com",
                            GivenName = "Daniel",
                            IsDeleted = false,
                            PhoneNumber = "555-555-5555",
                            Surname = "Brown",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "danielb"
                        },
                        new
                        {
                            Id = new Guid("b5e64e97-7d3b-4338-add0-ead00e4959c2"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "oliviaj@example.com",
                            GivenName = "Olivia",
                            IsDeleted = false,
                            PhoneNumber = "555-666-6666",
                            Surname = "Jones",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "oliviaj"
                        },
                        new
                        {
                            Id = new Guid("27074358-129c-40aa-9f02-7e1646f1d9af"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "davidm@example.com",
                            GivenName = "David",
                            IsDeleted = false,
                            PhoneNumber = "555-777-7777",
                            Surname = "Miller",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "davidm"
                        },
                        new
                        {
                            Id = new Guid("4d2fa6aa-4921-43bf-8578-a355b14bbd63"),
                            CreatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Email = "sophiad@example.com",
                            GivenName = "Sophia",
                            IsDeleted = false,
                            PhoneNumber = "555-888-8888",
                            Surname = "Davis",
                            UpdatedDate = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Username = "sophiad"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Member", b =>
                {
                    b.HasOne("Domain.Entities.Tenant", "Tenant")
                        .WithMany("Members")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Tenant", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
